C51 COMPILER V9.59.0.0   LCD1602                                                           09/02/2022 15:21:38 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          
   4          //引脚定义
   5          sbit LCD_RS=P2^6;
   6          sbit LCD_RW=P2^5;
   7          sbit LCD_E=P2^7;
   8          sbit r1=P0^0;
   9          //sbit k1=P3^1;
  10          #define LCD_DataPort P0
  11          
  12          /**
  13            * @brief  LCD1602延时函数，11.0592MHz调用可延时1ms
  14            * @param  无
  15            * @retval 无
  16            */
  17          void LCD_Delay()    //@11.0592MHz 1ms
  18          {
  19   1        unsigned char i, j;
  20   1      
  21   1        _nop_();
  22   1        _nop_();
  23   1        _nop_();
  24   1        i = 11;
  25   1        j = 190;
  26   1        do
  27   1        {
  28   2          while (--j);
  29   2        } while (--i);
  30   1      }
  31          
  32          /**
  33            * @brief  LCD1602写命令
  34            * @param  Command 要写入的命令
  35            * @retval 无
  36            */
  37          void LCD_WriteCommand(unsigned char Command)
  38          {
  39   1        LCD_RS=0;
  40   1        LCD_RW=0;
  41   1        LCD_DataPort=Command;
  42   1        LCD_E=1;
  43   1        LCD_Delay();
  44   1        LCD_E=0;
  45   1        LCD_Delay();
  46   1      }
  47          
  48          /**
  49            * @brief  LCD1602写数据
  50            * @param  Data 要写入的数据
  51            * @retval 无
  52            */
  53          void LCD_WriteData(unsigned char Data)
  54          {
C51 COMPILER V9.59.0.0   LCD1602                                                           09/02/2022 15:21:38 PAGE 2   

  55   1        LCD_RS=1;
  56   1        LCD_RW=0;
  57   1        LCD_DataPort=Data;
  58   1        LCD_E=1;
  59   1        LCD_Delay();
  60   1        LCD_E=0;
  61   1        LCD_Delay();
  62   1      }
  63          
  64          /**
  65            * @brief  LCD1602初始化函数
  66            * @param  无
  67            * @retval 无
  68            */
  69          void LCD_Init(void)
  70          {
  71   1        LCD_WriteCommand(0x38);
  72   1        LCD_WriteCommand(0x0C);
  73   1        LCD_WriteCommand(0x06);
  74   1        LCD_WriteCommand(0x01);
  75   1      }
  76          
  77          /**
  78            * @brief  LCD1602设置光标位置
  79            * @param  Line 行位置，范围：1~2
  80            * @param  Column 列位置，范围：1~16
  81            * @retval 无
  82            */
  83          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  84          {
  85   1        if(Line==1)
  86   1        {
  87   2          LCD_WriteCommand(0x80|(Column-1));
  88   2        }
  89   1        else
  90   1        {
  91   2          LCD_WriteCommand(0x80|(Column-1)+0x40);
  92   2        }
  93   1      }
  94          
  95          /**
  96            * @brief  在LCD1602指定位置上显示一个字符
  97            * @param  Line 行位置，范围：1~2
  98            * @param  Column 列位置，范围：1~16
  99            * @param  Char 要显示的字符
 100            * @retval 无
 101            */
 102          void LCD_ShowChar(unsigned char Line,unsigned char Column,unsigned char Char)
 103          {
 104   1        LCD_SetCursor(Line,Column);
 105   1        LCD_WriteData(Char);
 106   1      }
 107          
 108          /**
 109            * @brief  在LCD1602指定位置开始显示所给字符串
 110            * @param  Line 起始行位置，范围：1~2
 111            * @param  Column 起始列位置，范围：1~16
 112            * @param  String 要显示的字符串
 113            * @retval 无
 114            */
 115          void LCD_ShowString(unsigned char Line,unsigned char Column,unsigned char *String)
 116          {
C51 COMPILER V9.59.0.0   LCD1602                                                           09/02/2022 15:21:38 PAGE 3   

 117   1        unsigned char i;
 118   1        LCD_SetCursor(Line,Column);
 119   1        for(i=0;String[i]!='\0';i++)
 120   1        {
 121   2          LCD_WriteData(String[i]);
 122   2        }
 123   1      }
 124          
 125          /**
 126            * @brief  返回值=X的Y次方
 127            */
 128          int LCD_Pow(int X,int Y)
 129          {
 130   1        unsigned char i;
 131   1        int Result=1;
 132   1        for(i=0;i<Y;i++)
 133   1        {
 134   2          Result*=X;
 135   2        }
 136   1        return Result;
 137   1      }
 138          
 139          /**
 140            * @brief  在LCD1602指定位置开始显示所给数字
 141            * @param  Line 起始行位置，范围：1~2
 142            * @param  Column 起始列位置，范围：1~16
 143            * @param  Number 要显示的数字，范围：0~65535
 144            * @param  Length 要显示数字的长度，范围：1~5
 145            * @retval 无
 146            */
 147          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 148          {
 149   1        unsigned char i;
 150   1        LCD_SetCursor(Line,Column);
 151   1        for(i=Length;i>0;i--)
 152   1        {
 153   2          LCD_WriteData('0'+Number/LCD_Pow(10,i-1)%10);
 154   2        }
 155   1      }
 156          
 157          /**
 158            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 159            * @param  Line 起始行位置，范围：1~2
 160            * @param  Column 起始列位置，范围：1~16
 161            * @param  Number 要显示的数字，范围：-32768~32767
 162            * @param  Length 要显示数字的长度，范围：1~5
 163            * @retval 无
 164            */
 165          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 166          {
 167   1        unsigned char i;
 168   1        unsigned int Number1;
 169   1        LCD_SetCursor(Line,Column);
 170   1        if(Number>=0)
 171   1        {
 172   2          LCD_WriteData('+');
 173   2          Number1=Number;
 174   2        }
 175   1        else
 176   1        {
 177   2          LCD_WriteData('-');
 178   2          Number1=-Number;
C51 COMPILER V9.59.0.0   LCD1602                                                           09/02/2022 15:21:38 PAGE 4   

 179   2        }
 180   1        for(i=Length;i>0;i--)
 181   1        {
 182   2          LCD_WriteData('0'+Number1/LCD_Pow(10,i-1)%10);
 183   2        }
 184   1      }
 185          
 186          /**
 187            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 188            * @param  Line 起始行位置，范围：1~2
 189            * @param  Column 起始列位置，范围：1~16
 190            * @param  Number 要显示的数字，范围：0~0xFFFF
 191            * @param  Length 要显示数字的长度，范围：1~4
 192            * @retval 无
 193            */
 194          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 195          {
 196   1        unsigned char i;
 197   1        unsigned char SingleNumber;
 198   1        LCD_SetCursor(Line,Column);
 199   1        for(i=Length;i>0;i--)
 200   1        {
 201   2          SingleNumber=Number/LCD_Pow(16,i-1)%16;
 202   2          if(SingleNumber<10)
 203   2          {
 204   3            LCD_WriteData('0'+SingleNumber);
 205   3          }
 206   2          else
 207   2          {
 208   3            LCD_WriteData('A'+SingleNumber-10);
 209   3          }
 210   2        }
 211   1      }
 212          
 213          /**
 214            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 215            * @param  Line 起始行位置，范围：1~2
 216            * @param  Column 起始列位置，范围：1~16
 217            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 218            * @param  Length 要显示数字的长度，范围：1~16
 219            * @retval 无
 220            */
 221          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 222          {
 223   1        unsigned char i;
 224   1        LCD_SetCursor(Line,Column);
 225   1        for(i=Length;i>0;i--)
 226   1        {
 227   2          LCD_WriteData('0'+Number/LCD_Pow(2,i-1)%2);
 228   2        }
 229   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    428    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.59.0.0   LCD1602                                                           09/02/2022 15:21:38 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
